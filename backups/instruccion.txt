Pasos para volver mi Base de Datos o Backup

Primero Borramos todo los schemas:
DROP SCHEMA IF EXISTS public CASCADE;
DROP SCHEMA IF EXISTS planificacion CASCADE;
DROP SCHEMA IF EXISTS estadistica CASCADE;
DROP SCHEMA IF EXISTS proyecto CASCADE;

Luego creamos nuevamente los schemas
CREATE SCHEMA IF NOT EXISTS public;
CREATE SCHEMA IF NOT EXISTS planificacion;
CREATE SCHEMA IF NOT EXISTS estadistica;
CREATE SCHEMA IF NOT EXISTS proyecto; 

Verificamos si están todos los schemas
planificacion=# SELECT schema_name FROM information_schema.schemata WHERE schema_name NOT LIKE 'pg_%' AND schema_name != 'information_schema';

Ejecutamos la migración
php artisan migrate

Quitamos las restricciones
ALTER TABLE planificacion.foda_analisis DISABLE TRIGGER ALL;
ALTER TABLE planificacion.foda_categorias_has_perfil DISABLE TRIGGER ALL;
ALTER TABLE planificacion.foda_cruce_ambientes DISABLE TRIGGER ALL;
ALTER TABLE planificacion.foda_cruce_ambientes_has_amenazas DISABLE TRIGGER ALL;
ALTER TABLE planificacion.foda_cruce_ambientes_has_debilidades DISABLE TRIGGER ALL;
ALTER TABLE planificacion.foda_cruce_ambientes_has_fortalezas DISABLE TRIGGER ALL;
ALTER TABLE planificacion.foda_cruce_ambientes_has_oportunidades DISABLE TRIGGER ALL;
ALTER TABLE planificacion.foda_groups_has_perfiles DISABLE TRIGGER ALL;
ALTER TABLE planificacion.foda_models DISABLE TRIGGER ALL;
ALTER TABLE planificacion.foda_perfiles DISABLE TRIGGER ALL;
ALTER TABLE planificacion.pei_profiles DISABLE TRIGGER ALL;
ALTER TABLE planificacion.pei_profiles_has_dependencies DISABLE TRIGGER ALL;
ALTER TABLE planificacion.pei_profiles_has_strategies DISABLE TRIGGER ALL;
ALTER TABLE planificacion.peis_profiles_has_analysts DISABLE TRIGGER ALL;
ALTER TABLE planificacion.peis_profiles_has_responsibles DISABLE TRIGGER ALL;
ALTER TABLE planificacion.tasks DISABLE TRIGGER ALL;
ALTER TABLE planificacion.tasks_has_analysts DISABLE TRIGGER ALL;
ALTER TABLE planificacion.tasks_has_type_tasks DISABLE TRIGGER ALL;
ALTER TABLE public.groups_has_members DISABLE TRIGGER ALL;
ALTER TABLE public.migrations DISABLE TRIGGER ALL;
ALTER TABLE public.model_has_roles DISABLE TRIGGER ALL;
ALTER TABLE public.organigramas DISABLE TRIGGER ALL;
ALTER TABLE public.role_has_permissions DISABLE TRIGGER ALL;

Elminamos el campo parent_id tipo integer y convertimos a UUID
ALTER TABLE planificacion.pei_profiles
DROP COLUMN parent_id;

ALTER TABLE planificacion.pei_profiles
ADD COLUMN parent_id UUID;

Comentario: En pei_profiles, se crea el campo parent_id $table->nestedSet() con la migration, y predeterminado es tipo integer. Debemos convertir a UUID para compatibilizar con Illuminate\Database\Eloquent\Concerns\HasUuids; También foda_perfiles usa el mismo tipo

Volcamos el Backups
pg_restore -U postgres -d planificacion -Fc -a -v backups/backup_

Rehabilitamos las restricciones
ALTER TABLE planificacion.foda_analisis ENABLE TRIGGER ALL;
ALTER TABLE planificacion.foda_categorias_has_perfil ENABLE TRIGGER ALL;
ALTER TABLE planificacion.foda_cruce_ambientes ENABLE TRIGGER ALL;
ALTER TABLE planificacion.foda_cruce_ambientes_has_amenazas ENABLE TRIGGER ALL;
ALTER TABLE planificacion.foda_cruce_ambientes_has_debilidades ENABLE TRIGGER ALL;
ALTER TABLE planificacion.foda_cruce_ambientes_has_fortalezas ENABLE TRIGGER ALL;
ALTER TABLE planificacion.foda_cruce_ambientes_has_oportunidades ENABLE TRIGGER ALL;
ALTER TABLE planificacion.foda_groups_has_perfiles ENABLE TRIGGER ALL;
ALTER TABLE planificacion.foda_models ENABLE TRIGGER ALL;
ALTER TABLE planificacion.foda_perfiles ENABLE TRIGGER ALL;
ALTER TABLE planificacion.pei_profiles ENABLE TRIGGER ALL;
ALTER TABLE planificacion.pei_profiles_has_dependencies ENABLE TRIGGER ALL;
ALTER TABLE planificacion.pei_profiles_has_strategies ENABLE TRIGGER ALL;
ALTER TABLE planificacion.peis_profiles_has_analysts ENABLE TRIGGER ALL;
ALTER TABLE planificacion.peis_profiles_has_responsibles ENABLE TRIGGER ALL;
ALTER TABLE planificacion.tasks ENABLE TRIGGER ALL;
ALTER TABLE planificacion.tasks_has_analysts ENABLE TRIGGER ALL;
ALTER TABLE planificacion.tasks_has_type_tasks ENABLE TRIGGER ALL;
ALTER TABLE public.groups_has_members ENABLE TRIGGER ALL;
ALTER TABLE public.migrations ENABLE TRIGGER ALL;
ALTER TABLE public.model_has_roles ENABLE TRIGGER ALL;
ALTER TABLE public.organigramas ENABLE TRIGGER ALL;
ALTER TABLE public.role_has_permissions ENABLE TRIGGER ALL;


------------------------
Errores

autincremt
CREATE SEQUENCE tasks_has_type_tasks_id_seq START WITH 1;
ALTER TABLE tasks_has_type_tasks ALTER COLUMN id SET DEFAULT nextval('tasks_has_type_tasks_id_seq');

SELECT nextval('tasks_has_type_tasks_id_seq');

ALTER SEQUENCE tasks_has_type_tasks_id_seq RESTART WITH 80;
ALTER SEQUENCE tasks_has_type_tasks_id_seq RESTART WITH 73;


SELECT currval('tasks_has_type_tasks_id_seq');



